// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2667.Steamworks.subsystems;

import org.usfirst.frc2667.Steamworks.RobotMap;

import com.ctre.CANTalon;
import com.ctre.CANTalon.FeedbackDevice;
import com.ctre.CANTalon.TalonControlMode;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Shooter extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon shooterTalon = RobotMap.shootershooterTalon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    private double P = 0.01;
    private double I = 0;
    private double D = 0;
    private double F = 0.0265;
    
    private void initPID() {
    	shooterTalon.setPID(P, I, D);
    	
    	shooterTalon.setF(F);

    	
    	// Todo: Figure out what these variables do
    	// jej
    	
    	shooterTalon.setStatusFrameRateMs(CANTalon.StatusFrameRate.QuadEncoder, 10);
    	shooterTalon.configEncoderCodesPerRev(1024);
    	shooterTalon.reverseSensor(true);
    	shooterTalon.setEncPosition(0);
    	
    
    	
    	shooterTalon.setFeedbackDevice(FeedbackDevice.QuadEncoder);
    
    	
    }
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
    	
    	initPID();
    	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void setSpeed(double speed) {
    	shooterTalon.changeControlMode(TalonControlMode.PercentVbus);
    	shooterTalon.set(speed);
    	
    }
    
    public void setRPM(double speed) {
    	shooterTalon.changeControlMode(TalonControlMode.Speed);
    	shooterTalon.set(-speed);
    
    }
}

