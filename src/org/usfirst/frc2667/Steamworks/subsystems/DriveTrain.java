// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2667.Steamworks.subsystems;

import org.usfirst.frc2667.Steamworks.RobotMap;
import org.usfirst.frc2667.Steamworks.commands.Drive;
import org.usfirst.frc2667.Steamworks.util.DriveTrainVector;
import org.usfirst.frc2667.Steamworks.util.GameFieldVectors;
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon leftFrontCAN = RobotMap.driveTrainleftFrontCAN;
    private final CANTalon leftRearCAN = RobotMap.driveTrainleftRearCAN;
    private final CANTalon rightFrontCAN = RobotMap.driveTrainRightFrontCAN;
    private final CANTalon rightRearCAN = RobotMap.driveTrainRightRearCAN;
    private final RobotDrive robotDriveCAN = RobotMap.driveTrainRobotDriveCAN;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public final ADXRS450_Gyro gyro = RobotMap.gyro;
    private GameFieldVectors vector = null;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new Drive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void mecanumDrive(Joystick joystick) {
    	mecanumDrive(joystick, 0);
    }
    
    public void mecanumDrive(Joystick joystick, double gyroAngle) {
    	robotDriveCAN.mecanumDrive_Cartesian(joystick.getX(), joystick.getY(), joystick.getZ(), gyroAngle);
    }
    
    public void mecanumDrive(double x,double y,double z, double gyroAngle) {
    	robotDriveCAN.mecanumDrive_Cartesian(x,y,z, gyroAngle);
    }
    
    public void stopMotor() {
    	robotDriveCAN.stopMotor();
    }

	public SpeedController getLeftFront() {
		return leftFrontCAN;
	}

	public SpeedController getLeftRear() {
		return leftRearCAN;
	}

	public SpeedController getRightFront() {
		return rightFrontCAN;
	}

	public SpeedController getRightRear() {
		return rightRearCAN;
	}
	
	public ADXRS450_Gyro getGyro() {
		return gyro;
	}
	
	public double getGyroAngle() {
		return gyro.getAngle();
	}

	public RobotDrive getRobotDrive() {
		return robotDriveCAN;
	}
	
	public double getAngle() {
		return gyro.getAngle();
	}
	
	public void setVector(GameFieldVectors gfv){
		vector = gfv;
	}
	
	public GameFieldVectors getVector(){
		return vector;
		//could be null
	}
	
	public void goForwardGyro(double speed){
		DriveTrainVector v = vector.getForwardVector(speed);
		mecanumDrive(v.getX(), v.getY(), 0, gyro.getAngle());
	}
	
	public void goBackwardGyro(double speed){
		DriveTrainVector v = vector.getBackwardVector(speed);
		mecanumDrive(v.getX(), v.getY(), 0, gyro.getAngle());
	}
	
	public void goLeftGyro(double speed){
		DriveTrainVector v = vector.getLeftVector(speed);
		mecanumDrive(v.getX(), v.getY(), 0, gyro.getAngle());
	}
	
	public void goRightGyro(double speed){
		DriveTrainVector v = vector.getRightVector(speed);
		mecanumDrive(v.getX(), v.getY(), 0, gyro.getAngle());
	}
}

